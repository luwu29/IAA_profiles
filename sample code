#seperate objects
#select Columns for OneHotEncoder
obj=X_train.select_dtypes(include='object')

obj_cols=obj.columns #final columns need OneHotEncoder
X_train.loc[:,obj_cols]=X_train.loc[:,obj_cols].astype('str')
obj.columns


import os

os.environ['PATH'] = os.environ['PATH']+';'+os.environ['CONDA_PREFIX']+r"\Library\bin\graphviz"

import collections

dot_data = tree.export_graphviz(dt,
                                feature_names=OHE.columns,
                                out_file=None,
                                filled=True,
                                rounded=True)
graph = pydotplus.graph_from_dot_data(dot_data)

colors = ('turquoise', 'sandybrown')
edges = collections.defaultdict(list)

for edge in graph.get_edge_list():
    edges[edge.get_source()].append(int(edge.get_destination()))

for edge in edges:
    edges[edge].sort()    
    for i in range(2):
        dest = graph.get_node(str(edges[edge][i]))[0]
        dest.set_fillcolor(colors[i])
Image(graph.create_png())
